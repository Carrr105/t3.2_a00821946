Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON vars bloque
Rule 2     programa -> PROGRAM ID SEMICOLON vars
Rule 3     programa -> PROGRAM ID SEMICOLON bloque
Rule 4     programa -> PROGRAM ID SEMICOLON
Rule 5     vars -> VAR varsP
Rule 6     varsP -> ID TWODOTS tipo SEMICOLON
Rule 7     varsP -> ID TWODOTS tipo SEMICOLON varsP
Rule 8     varsP -> ID DOT varsP
Rule 9     tipo -> INT
Rule 10    tipo -> FLOAT
Rule 11    bloque -> OPENBRACE bloqueP CLOSEBRACE
Rule 12    bloqueP -> estatuto
Rule 13    bloqueP -> estatuto bloqueP
Rule 14    bloqueP -> empty
Rule 15    estatuto -> asignacion
Rule 16    estatuto -> condicion
Rule 17    estatuto -> escritura
Rule 18    asignacion -> ID EQUALS expresion SEMICOLON
Rule 19    expresion -> exp expresionP
Rule 20    expresionP -> GREATER exp
Rule 21    expresionP -> LESS exp
Rule 22    expresionP -> DIFFERENT exp
Rule 23    expresionP -> empty
Rule 24    escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
Rule 25    escrituraP -> expresion
Rule 26    escrituraP -> expresion DOT escrituraP
Rule 27    escrituraP -> CTESTRING
Rule 28    escrituraP -> CTESTRING DOT
Rule 29    condicion -> condicionP bloque SEMICOLON
Rule 30    condicion -> condicionP bloque ELSE bloque SEMICOLON
Rule 31    condicionP -> IF OPENPARENTHESES expresion CLOSEPARENTHESES
Rule 32    exp -> termino expP
Rule 33    expP -> PLUS exp
Rule 34    expP -> MINUS exp
Rule 35    expP -> empty
Rule 36    termino -> factor terminoP
Rule 37    terminoP -> MULTIPLY terminoP
Rule 38    terminoP -> DIVIDE terminoP
Rule 39    terminoP -> empty
Rule 40    factor -> OPENPARENTHESES expresion CLOSEPARENTHESES
Rule 41    factor -> factorP
Rule 42    factorP -> PLUS varcte
Rule 43    factorP -> MINUS varcte
Rule 44    factorP -> varcte
Rule 45    varcte -> ID
Rule 46    varcte -> CTEI
Rule 47    varcte -> CTEF
Rule 48    empty -> <empty>

Terminals, with rules where they appear

CLOSEBRACE           : 11
CLOSEPARENTHESES     : 24 31 40
CTEF                 : 47
CTEI                 : 46
CTESTRING            : 27 28
DIFFERENT            : 22
DIVIDE               : 38
DOT                  : 8 26 28
ELSE                 : 30
EQUALS               : 18
FLOAT                : 10
GREATER              : 20
ID                   : 1 2 3 4 6 7 8 18 45
IF                   : 31
INT                  : 9
LESS                 : 21
MINUS                : 34 43
MULTIPLY             : 37
OPENBRACE            : 11
OPENPARENTHESES      : 24 31 40
PLUS                 : 33 42
PRINT                : 24
PROGRAM              : 1 2 3 4
SEMICOLON            : 1 2 3 4 6 7 18 24 29 30
TWODOTS              : 6 7
VAR                  : 5
error                : 

Nonterminals, with rules where they appear

asignacion           : 15
bloque               : 1 3 29 30 30
bloqueP              : 11 13
condicion            : 16
condicionP           : 29 30
empty                : 14 23 35 39
escritura            : 17
escrituraP           : 24 26
estatuto             : 12 13
exp                  : 19 20 21 22 33 34
expP                 : 32
expresion            : 18 25 26 31 40
expresionP           : 19
factor               : 36
factorP              : 41
programa             : 0
termino              : 32
terminoP             : 36 37 38
tipo                 : 6 7
varcte               : 42 43 44
vars                 : 1 2
varsP                : 5 7 8

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON vars bloque
    (2) programa -> . PROGRAM ID SEMICOLON vars
    (3) programa -> . PROGRAM ID SEMICOLON bloque
    (4) programa -> . PROGRAM ID SEMICOLON

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON vars bloque
    (2) programa -> PROGRAM . ID SEMICOLON vars
    (3) programa -> PROGRAM . ID SEMICOLON bloque
    (4) programa -> PROGRAM . ID SEMICOLON

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON vars bloque
    (2) programa -> PROGRAM ID . SEMICOLON vars
    (3) programa -> PROGRAM ID . SEMICOLON bloque
    (4) programa -> PROGRAM ID . SEMICOLON

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . vars bloque
    (2) programa -> PROGRAM ID SEMICOLON . vars
    (3) programa -> PROGRAM ID SEMICOLON . bloque
    (4) programa -> PROGRAM ID SEMICOLON .
    (5) vars -> . VAR varsP
    (11) bloque -> . OPENBRACE bloqueP CLOSEBRACE

    $end            reduce using rule 4 (programa -> PROGRAM ID SEMICOLON .)
    VAR             shift and go to state 7
    OPENBRACE       shift and go to state 8

    vars                           shift and go to state 5
    bloque                         shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON vars . bloque
    (2) programa -> PROGRAM ID SEMICOLON vars .
    (11) bloque -> . OPENBRACE bloqueP CLOSEBRACE

    $end            reduce using rule 2 (programa -> PROGRAM ID SEMICOLON vars .)
    OPENBRACE       shift and go to state 8

    bloque                         shift and go to state 9

state 6

    (3) programa -> PROGRAM ID SEMICOLON bloque .

    $end            reduce using rule 3 (programa -> PROGRAM ID SEMICOLON bloque .)


state 7

    (5) vars -> VAR . varsP
    (6) varsP -> . ID TWODOTS tipo SEMICOLON
    (7) varsP -> . ID TWODOTS tipo SEMICOLON varsP
    (8) varsP -> . ID DOT varsP

    ID              shift and go to state 11

    varsP                          shift and go to state 10

state 8

    (11) bloque -> OPENBRACE . bloqueP CLOSEBRACE
    (12) bloqueP -> . estatuto
    (13) bloqueP -> . estatuto bloqueP
    (14) bloqueP -> . empty
    (15) estatuto -> . asignacion
    (16) estatuto -> . condicion
    (17) estatuto -> . escritura
    (48) empty -> .
    (18) asignacion -> . ID EQUALS expresion SEMICOLON
    (29) condicion -> . condicionP bloque SEMICOLON
    (30) condicion -> . condicionP bloque ELSE bloque SEMICOLON
    (24) escritura -> . PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (31) condicionP -> . IF OPENPARENTHESES expresion CLOSEPARENTHESES

    CLOSEBRACE      reduce using rule 48 (empty -> .)
    ID              shift and go to state 18
    PRINT           shift and go to state 20
    IF              shift and go to state 21

    bloqueP                        shift and go to state 12
    estatuto                       shift and go to state 13
    empty                          shift and go to state 14
    asignacion                     shift and go to state 15
    condicion                      shift and go to state 16
    escritura                      shift and go to state 17
    condicionP                     shift and go to state 19

state 9

    (1) programa -> PROGRAM ID SEMICOLON vars bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON vars bloque .)


state 10

    (5) vars -> VAR varsP .

    OPENBRACE       reduce using rule 5 (vars -> VAR varsP .)
    $end            reduce using rule 5 (vars -> VAR varsP .)


state 11

    (6) varsP -> ID . TWODOTS tipo SEMICOLON
    (7) varsP -> ID . TWODOTS tipo SEMICOLON varsP
    (8) varsP -> ID . DOT varsP

    TWODOTS         shift and go to state 22
    DOT             shift and go to state 23


state 12

    (11) bloque -> OPENBRACE bloqueP . CLOSEBRACE

    CLOSEBRACE      shift and go to state 24


state 13

    (12) bloqueP -> estatuto .
    (13) bloqueP -> estatuto . bloqueP
    (12) bloqueP -> . estatuto
    (13) bloqueP -> . estatuto bloqueP
    (14) bloqueP -> . empty
    (15) estatuto -> . asignacion
    (16) estatuto -> . condicion
    (17) estatuto -> . escritura
    (48) empty -> .
    (18) asignacion -> . ID EQUALS expresion SEMICOLON
    (29) condicion -> . condicionP bloque SEMICOLON
    (30) condicion -> . condicionP bloque ELSE bloque SEMICOLON
    (24) escritura -> . PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (31) condicionP -> . IF OPENPARENTHESES expresion CLOSEPARENTHESES

  ! reduce/reduce conflict for CLOSEBRACE resolved using rule 12 (bloqueP -> estatuto .)
    CLOSEBRACE      reduce using rule 12 (bloqueP -> estatuto .)
    ID              shift and go to state 18
    PRINT           shift and go to state 20
    IF              shift and go to state 21

  ! CLOSEBRACE      [ reduce using rule 48 (empty -> .) ]

    estatuto                       shift and go to state 13
    bloqueP                        shift and go to state 25
    empty                          shift and go to state 14
    asignacion                     shift and go to state 15
    condicion                      shift and go to state 16
    escritura                      shift and go to state 17
    condicionP                     shift and go to state 19

state 14

    (14) bloqueP -> empty .

    CLOSEBRACE      reduce using rule 14 (bloqueP -> empty .)


state 15

    (15) estatuto -> asignacion .

    ID              reduce using rule 15 (estatuto -> asignacion .)
    PRINT           reduce using rule 15 (estatuto -> asignacion .)
    IF              reduce using rule 15 (estatuto -> asignacion .)
    CLOSEBRACE      reduce using rule 15 (estatuto -> asignacion .)


state 16

    (16) estatuto -> condicion .

    ID              reduce using rule 16 (estatuto -> condicion .)
    PRINT           reduce using rule 16 (estatuto -> condicion .)
    IF              reduce using rule 16 (estatuto -> condicion .)
    CLOSEBRACE      reduce using rule 16 (estatuto -> condicion .)


state 17

    (17) estatuto -> escritura .

    ID              reduce using rule 17 (estatuto -> escritura .)
    PRINT           reduce using rule 17 (estatuto -> escritura .)
    IF              reduce using rule 17 (estatuto -> escritura .)
    CLOSEBRACE      reduce using rule 17 (estatuto -> escritura .)


state 18

    (18) asignacion -> ID . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 26


state 19

    (29) condicion -> condicionP . bloque SEMICOLON
    (30) condicion -> condicionP . bloque ELSE bloque SEMICOLON
    (11) bloque -> . OPENBRACE bloqueP CLOSEBRACE

    OPENBRACE       shift and go to state 8

    bloque                         shift and go to state 27

state 20

    (24) escritura -> PRINT . OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 28


state 21

    (31) condicionP -> IF . OPENPARENTHESES expresion CLOSEPARENTHESES

    OPENPARENTHESES shift and go to state 29


state 22

    (6) varsP -> ID TWODOTS . tipo SEMICOLON
    (7) varsP -> ID TWODOTS . tipo SEMICOLON varsP
    (9) tipo -> . INT
    (10) tipo -> . FLOAT

    INT             shift and go to state 31
    FLOAT           shift and go to state 32

    tipo                           shift and go to state 30

state 23

    (8) varsP -> ID DOT . varsP
    (6) varsP -> . ID TWODOTS tipo SEMICOLON
    (7) varsP -> . ID TWODOTS tipo SEMICOLON varsP
    (8) varsP -> . ID DOT varsP

    ID              shift and go to state 11

    varsP                          shift and go to state 33

state 24

    (11) bloque -> OPENBRACE bloqueP CLOSEBRACE .

    $end            reduce using rule 11 (bloque -> OPENBRACE bloqueP CLOSEBRACE .)
    SEMICOLON       reduce using rule 11 (bloque -> OPENBRACE bloqueP CLOSEBRACE .)
    ELSE            reduce using rule 11 (bloque -> OPENBRACE bloqueP CLOSEBRACE .)


state 25

    (13) bloqueP -> estatuto bloqueP .

    CLOSEBRACE      reduce using rule 13 (bloqueP -> estatuto bloqueP .)


state 26

    (18) asignacion -> ID EQUALS . expresion SEMICOLON
    (19) expresion -> . exp expresionP
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    expresion                      shift and go to state 35
    exp                            shift and go to state 36
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 27

    (29) condicion -> condicionP bloque . SEMICOLON
    (30) condicion -> condicionP bloque . ELSE bloque SEMICOLON

    SEMICOLON       shift and go to state 46
    ELSE            shift and go to state 47


state 28

    (24) escritura -> PRINT OPENPARENTHESES . escrituraP CLOSEPARENTHESES SEMICOLON
    (25) escrituraP -> . expresion
    (26) escrituraP -> . expresion DOT escrituraP
    (27) escrituraP -> . CTESTRING
    (28) escrituraP -> . CTESTRING DOT
    (19) expresion -> . exp expresionP
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    CTESTRING       shift and go to state 50
    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    escrituraP                     shift and go to state 48
    expresion                      shift and go to state 49
    exp                            shift and go to state 36
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 29

    (31) condicionP -> IF OPENPARENTHESES . expresion CLOSEPARENTHESES
    (19) expresion -> . exp expresionP
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    expresion                      shift and go to state 51
    exp                            shift and go to state 36
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 30

    (6) varsP -> ID TWODOTS tipo . SEMICOLON
    (7) varsP -> ID TWODOTS tipo . SEMICOLON varsP

    SEMICOLON       shift and go to state 52


state 31

    (9) tipo -> INT .

    SEMICOLON       reduce using rule 9 (tipo -> INT .)


state 32

    (10) tipo -> FLOAT .

    SEMICOLON       reduce using rule 10 (tipo -> FLOAT .)


state 33

    (8) varsP -> ID DOT varsP .

    OPENBRACE       reduce using rule 8 (varsP -> ID DOT varsP .)
    $end            reduce using rule 8 (varsP -> ID DOT varsP .)


state 34

    (45) varcte -> ID .

    MULTIPLY        reduce using rule 45 (varcte -> ID .)
    DIVIDE          reduce using rule 45 (varcte -> ID .)
    PLUS            reduce using rule 45 (varcte -> ID .)
    MINUS           reduce using rule 45 (varcte -> ID .)
    GREATER         reduce using rule 45 (varcte -> ID .)
    LESS            reduce using rule 45 (varcte -> ID .)
    DIFFERENT       reduce using rule 45 (varcte -> ID .)
    SEMICOLON       reduce using rule 45 (varcte -> ID .)
    DOT             reduce using rule 45 (varcte -> ID .)
    CLOSEPARENTHESES reduce using rule 45 (varcte -> ID .)


state 35

    (18) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 53


state 36

    (19) expresion -> exp . expresionP
    (20) expresionP -> . GREATER exp
    (21) expresionP -> . LESS exp
    (22) expresionP -> . DIFFERENT exp
    (23) expresionP -> . empty
    (48) empty -> .

    GREATER         shift and go to state 55
    LESS            shift and go to state 56
    DIFFERENT       shift and go to state 57
    SEMICOLON       reduce using rule 48 (empty -> .)
    DOT             reduce using rule 48 (empty -> .)
    CLOSEPARENTHESES reduce using rule 48 (empty -> .)

    expresionP                     shift and go to state 54
    empty                          shift and go to state 58

state 37

    (32) exp -> termino . expP
    (33) expP -> . PLUS exp
    (34) expP -> . MINUS exp
    (35) expP -> . empty
    (48) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    GREATER         reduce using rule 48 (empty -> .)
    LESS            reduce using rule 48 (empty -> .)
    DIFFERENT       reduce using rule 48 (empty -> .)
    SEMICOLON       reduce using rule 48 (empty -> .)
    DOT             reduce using rule 48 (empty -> .)
    CLOSEPARENTHESES reduce using rule 48 (empty -> .)

    expP                           shift and go to state 59
    empty                          shift and go to state 62

state 38

    (36) termino -> factor . terminoP
    (37) terminoP -> . MULTIPLY terminoP
    (38) terminoP -> . DIVIDE terminoP
    (39) terminoP -> . empty
    (48) empty -> .

    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    PLUS            reduce using rule 48 (empty -> .)
    MINUS           reduce using rule 48 (empty -> .)
    GREATER         reduce using rule 48 (empty -> .)
    LESS            reduce using rule 48 (empty -> .)
    DIFFERENT       reduce using rule 48 (empty -> .)
    SEMICOLON       reduce using rule 48 (empty -> .)
    DOT             reduce using rule 48 (empty -> .)
    CLOSEPARENTHESES reduce using rule 48 (empty -> .)

    terminoP                       shift and go to state 63
    empty                          shift and go to state 66

state 39

    (40) factor -> OPENPARENTHESES . expresion CLOSEPARENTHESES
    (19) expresion -> . exp expresionP
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    expresion                      shift and go to state 67
    exp                            shift and go to state 36
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 40

    (41) factor -> factorP .

    MULTIPLY        reduce using rule 41 (factor -> factorP .)
    DIVIDE          reduce using rule 41 (factor -> factorP .)
    PLUS            reduce using rule 41 (factor -> factorP .)
    MINUS           reduce using rule 41 (factor -> factorP .)
    GREATER         reduce using rule 41 (factor -> factorP .)
    LESS            reduce using rule 41 (factor -> factorP .)
    DIFFERENT       reduce using rule 41 (factor -> factorP .)
    SEMICOLON       reduce using rule 41 (factor -> factorP .)
    DOT             reduce using rule 41 (factor -> factorP .)
    CLOSEPARENTHESES reduce using rule 41 (factor -> factorP .)


state 41

    (42) factorP -> PLUS . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    varcte                         shift and go to state 68

state 42

    (44) factorP -> varcte .

    MULTIPLY        reduce using rule 44 (factorP -> varcte .)
    DIVIDE          reduce using rule 44 (factorP -> varcte .)
    PLUS            reduce using rule 44 (factorP -> varcte .)
    MINUS           reduce using rule 44 (factorP -> varcte .)
    GREATER         reduce using rule 44 (factorP -> varcte .)
    LESS            reduce using rule 44 (factorP -> varcte .)
    DIFFERENT       reduce using rule 44 (factorP -> varcte .)
    SEMICOLON       reduce using rule 44 (factorP -> varcte .)
    DOT             reduce using rule 44 (factorP -> varcte .)
    CLOSEPARENTHESES reduce using rule 44 (factorP -> varcte .)


state 43

    (43) factorP -> MINUS . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    varcte                         shift and go to state 69

state 44

    (46) varcte -> CTEI .

    MULTIPLY        reduce using rule 46 (varcte -> CTEI .)
    DIVIDE          reduce using rule 46 (varcte -> CTEI .)
    PLUS            reduce using rule 46 (varcte -> CTEI .)
    MINUS           reduce using rule 46 (varcte -> CTEI .)
    GREATER         reduce using rule 46 (varcte -> CTEI .)
    LESS            reduce using rule 46 (varcte -> CTEI .)
    DIFFERENT       reduce using rule 46 (varcte -> CTEI .)
    SEMICOLON       reduce using rule 46 (varcte -> CTEI .)
    DOT             reduce using rule 46 (varcte -> CTEI .)
    CLOSEPARENTHESES reduce using rule 46 (varcte -> CTEI .)


state 45

    (47) varcte -> CTEF .

    MULTIPLY        reduce using rule 47 (varcte -> CTEF .)
    DIVIDE          reduce using rule 47 (varcte -> CTEF .)
    PLUS            reduce using rule 47 (varcte -> CTEF .)
    MINUS           reduce using rule 47 (varcte -> CTEF .)
    GREATER         reduce using rule 47 (varcte -> CTEF .)
    LESS            reduce using rule 47 (varcte -> CTEF .)
    DIFFERENT       reduce using rule 47 (varcte -> CTEF .)
    SEMICOLON       reduce using rule 47 (varcte -> CTEF .)
    DOT             reduce using rule 47 (varcte -> CTEF .)
    CLOSEPARENTHESES reduce using rule 47 (varcte -> CTEF .)


state 46

    (29) condicion -> condicionP bloque SEMICOLON .

    ID              reduce using rule 29 (condicion -> condicionP bloque SEMICOLON .)
    PRINT           reduce using rule 29 (condicion -> condicionP bloque SEMICOLON .)
    IF              reduce using rule 29 (condicion -> condicionP bloque SEMICOLON .)
    CLOSEBRACE      reduce using rule 29 (condicion -> condicionP bloque SEMICOLON .)


state 47

    (30) condicion -> condicionP bloque ELSE . bloque SEMICOLON
    (11) bloque -> . OPENBRACE bloqueP CLOSEBRACE

    OPENBRACE       shift and go to state 8

    bloque                         shift and go to state 70

state 48

    (24) escritura -> PRINT OPENPARENTHESES escrituraP . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 71


state 49

    (25) escrituraP -> expresion .
    (26) escrituraP -> expresion . DOT escrituraP

    CLOSEPARENTHESES reduce using rule 25 (escrituraP -> expresion .)
    DOT             shift and go to state 72


state 50

    (27) escrituraP -> CTESTRING .
    (28) escrituraP -> CTESTRING . DOT

    CLOSEPARENTHESES reduce using rule 27 (escrituraP -> CTESTRING .)
    DOT             shift and go to state 73


state 51

    (31) condicionP -> IF OPENPARENTHESES expresion . CLOSEPARENTHESES

    CLOSEPARENTHESES shift and go to state 74


state 52

    (6) varsP -> ID TWODOTS tipo SEMICOLON .
    (7) varsP -> ID TWODOTS tipo SEMICOLON . varsP
    (6) varsP -> . ID TWODOTS tipo SEMICOLON
    (7) varsP -> . ID TWODOTS tipo SEMICOLON varsP
    (8) varsP -> . ID DOT varsP

    OPENBRACE       reduce using rule 6 (varsP -> ID TWODOTS tipo SEMICOLON .)
    $end            reduce using rule 6 (varsP -> ID TWODOTS tipo SEMICOLON .)
    ID              shift and go to state 11

    varsP                          shift and go to state 75

state 53

    (18) asignacion -> ID EQUALS expresion SEMICOLON .

    ID              reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)
    CLOSEBRACE      reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 54

    (19) expresion -> exp expresionP .

    SEMICOLON       reduce using rule 19 (expresion -> exp expresionP .)
    DOT             reduce using rule 19 (expresion -> exp expresionP .)
    CLOSEPARENTHESES reduce using rule 19 (expresion -> exp expresionP .)


state 55

    (20) expresionP -> GREATER . exp
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    exp                            shift and go to state 76
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 56

    (21) expresionP -> LESS . exp
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    exp                            shift and go to state 77
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 57

    (22) expresionP -> DIFFERENT . exp
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    exp                            shift and go to state 78
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 58

    (23) expresionP -> empty .

    SEMICOLON       reduce using rule 23 (expresionP -> empty .)
    DOT             reduce using rule 23 (expresionP -> empty .)
    CLOSEPARENTHESES reduce using rule 23 (expresionP -> empty .)


state 59

    (32) exp -> termino expP .

    GREATER         reduce using rule 32 (exp -> termino expP .)
    LESS            reduce using rule 32 (exp -> termino expP .)
    DIFFERENT       reduce using rule 32 (exp -> termino expP .)
    SEMICOLON       reduce using rule 32 (exp -> termino expP .)
    DOT             reduce using rule 32 (exp -> termino expP .)
    CLOSEPARENTHESES reduce using rule 32 (exp -> termino expP .)


state 60

    (33) expP -> PLUS . exp
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    exp                            shift and go to state 79
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 61

    (34) expP -> MINUS . exp
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    exp                            shift and go to state 80
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 62

    (35) expP -> empty .

    GREATER         reduce using rule 35 (expP -> empty .)
    LESS            reduce using rule 35 (expP -> empty .)
    DIFFERENT       reduce using rule 35 (expP -> empty .)
    SEMICOLON       reduce using rule 35 (expP -> empty .)
    DOT             reduce using rule 35 (expP -> empty .)
    CLOSEPARENTHESES reduce using rule 35 (expP -> empty .)


state 63

    (36) termino -> factor terminoP .

    PLUS            reduce using rule 36 (termino -> factor terminoP .)
    MINUS           reduce using rule 36 (termino -> factor terminoP .)
    GREATER         reduce using rule 36 (termino -> factor terminoP .)
    LESS            reduce using rule 36 (termino -> factor terminoP .)
    DIFFERENT       reduce using rule 36 (termino -> factor terminoP .)
    SEMICOLON       reduce using rule 36 (termino -> factor terminoP .)
    DOT             reduce using rule 36 (termino -> factor terminoP .)
    CLOSEPARENTHESES reduce using rule 36 (termino -> factor terminoP .)


state 64

    (37) terminoP -> MULTIPLY . terminoP
    (37) terminoP -> . MULTIPLY terminoP
    (38) terminoP -> . DIVIDE terminoP
    (39) terminoP -> . empty
    (48) empty -> .

    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    PLUS            reduce using rule 48 (empty -> .)
    MINUS           reduce using rule 48 (empty -> .)
    GREATER         reduce using rule 48 (empty -> .)
    LESS            reduce using rule 48 (empty -> .)
    DIFFERENT       reduce using rule 48 (empty -> .)
    SEMICOLON       reduce using rule 48 (empty -> .)
    DOT             reduce using rule 48 (empty -> .)
    CLOSEPARENTHESES reduce using rule 48 (empty -> .)

    terminoP                       shift and go to state 81
    empty                          shift and go to state 66

state 65

    (38) terminoP -> DIVIDE . terminoP
    (37) terminoP -> . MULTIPLY terminoP
    (38) terminoP -> . DIVIDE terminoP
    (39) terminoP -> . empty
    (48) empty -> .

    MULTIPLY        shift and go to state 64
    DIVIDE          shift and go to state 65
    PLUS            reduce using rule 48 (empty -> .)
    MINUS           reduce using rule 48 (empty -> .)
    GREATER         reduce using rule 48 (empty -> .)
    LESS            reduce using rule 48 (empty -> .)
    DIFFERENT       reduce using rule 48 (empty -> .)
    SEMICOLON       reduce using rule 48 (empty -> .)
    DOT             reduce using rule 48 (empty -> .)
    CLOSEPARENTHESES reduce using rule 48 (empty -> .)

    terminoP                       shift and go to state 82
    empty                          shift and go to state 66

state 66

    (39) terminoP -> empty .

    PLUS            reduce using rule 39 (terminoP -> empty .)
    MINUS           reduce using rule 39 (terminoP -> empty .)
    GREATER         reduce using rule 39 (terminoP -> empty .)
    LESS            reduce using rule 39 (terminoP -> empty .)
    DIFFERENT       reduce using rule 39 (terminoP -> empty .)
    SEMICOLON       reduce using rule 39 (terminoP -> empty .)
    DOT             reduce using rule 39 (terminoP -> empty .)
    CLOSEPARENTHESES reduce using rule 39 (terminoP -> empty .)


state 67

    (40) factor -> OPENPARENTHESES expresion . CLOSEPARENTHESES

    CLOSEPARENTHESES shift and go to state 83


state 68

    (42) factorP -> PLUS varcte .

    MULTIPLY        reduce using rule 42 (factorP -> PLUS varcte .)
    DIVIDE          reduce using rule 42 (factorP -> PLUS varcte .)
    PLUS            reduce using rule 42 (factorP -> PLUS varcte .)
    MINUS           reduce using rule 42 (factorP -> PLUS varcte .)
    GREATER         reduce using rule 42 (factorP -> PLUS varcte .)
    LESS            reduce using rule 42 (factorP -> PLUS varcte .)
    DIFFERENT       reduce using rule 42 (factorP -> PLUS varcte .)
    SEMICOLON       reduce using rule 42 (factorP -> PLUS varcte .)
    DOT             reduce using rule 42 (factorP -> PLUS varcte .)
    CLOSEPARENTHESES reduce using rule 42 (factorP -> PLUS varcte .)


state 69

    (43) factorP -> MINUS varcte .

    MULTIPLY        reduce using rule 43 (factorP -> MINUS varcte .)
    DIVIDE          reduce using rule 43 (factorP -> MINUS varcte .)
    PLUS            reduce using rule 43 (factorP -> MINUS varcte .)
    MINUS           reduce using rule 43 (factorP -> MINUS varcte .)
    GREATER         reduce using rule 43 (factorP -> MINUS varcte .)
    LESS            reduce using rule 43 (factorP -> MINUS varcte .)
    DIFFERENT       reduce using rule 43 (factorP -> MINUS varcte .)
    SEMICOLON       reduce using rule 43 (factorP -> MINUS varcte .)
    DOT             reduce using rule 43 (factorP -> MINUS varcte .)
    CLOSEPARENTHESES reduce using rule 43 (factorP -> MINUS varcte .)


state 70

    (30) condicion -> condicionP bloque ELSE bloque . SEMICOLON

    SEMICOLON       shift and go to state 84


state 71

    (24) escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 85


state 72

    (26) escrituraP -> expresion DOT . escrituraP
    (25) escrituraP -> . expresion
    (26) escrituraP -> . expresion DOT escrituraP
    (27) escrituraP -> . CTESTRING
    (28) escrituraP -> . CTESTRING DOT
    (19) expresion -> . exp expresionP
    (32) exp -> . termino expP
    (36) termino -> . factor terminoP
    (40) factor -> . OPENPARENTHESES expresion CLOSEPARENTHESES
    (41) factor -> . factorP
    (42) factorP -> . PLUS varcte
    (43) factorP -> . MINUS varcte
    (44) factorP -> . varcte
    (45) varcte -> . ID
    (46) varcte -> . CTEI
    (47) varcte -> . CTEF

    CTESTRING       shift and go to state 50
    OPENPARENTHESES shift and go to state 39
    PLUS            shift and go to state 41
    MINUS           shift and go to state 43
    ID              shift and go to state 34
    CTEI            shift and go to state 44
    CTEF            shift and go to state 45

    expresion                      shift and go to state 49
    escrituraP                     shift and go to state 86
    exp                            shift and go to state 36
    termino                        shift and go to state 37
    factor                         shift and go to state 38
    factorP                        shift and go to state 40
    varcte                         shift and go to state 42

state 73

    (28) escrituraP -> CTESTRING DOT .

    CLOSEPARENTHESES reduce using rule 28 (escrituraP -> CTESTRING DOT .)


state 74

    (31) condicionP -> IF OPENPARENTHESES expresion CLOSEPARENTHESES .

    OPENBRACE       reduce using rule 31 (condicionP -> IF OPENPARENTHESES expresion CLOSEPARENTHESES .)


state 75

    (7) varsP -> ID TWODOTS tipo SEMICOLON varsP .

    OPENBRACE       reduce using rule 7 (varsP -> ID TWODOTS tipo SEMICOLON varsP .)
    $end            reduce using rule 7 (varsP -> ID TWODOTS tipo SEMICOLON varsP .)


state 76

    (20) expresionP -> GREATER exp .

    SEMICOLON       reduce using rule 20 (expresionP -> GREATER exp .)
    DOT             reduce using rule 20 (expresionP -> GREATER exp .)
    CLOSEPARENTHESES reduce using rule 20 (expresionP -> GREATER exp .)


state 77

    (21) expresionP -> LESS exp .

    SEMICOLON       reduce using rule 21 (expresionP -> LESS exp .)
    DOT             reduce using rule 21 (expresionP -> LESS exp .)
    CLOSEPARENTHESES reduce using rule 21 (expresionP -> LESS exp .)


state 78

    (22) expresionP -> DIFFERENT exp .

    SEMICOLON       reduce using rule 22 (expresionP -> DIFFERENT exp .)
    DOT             reduce using rule 22 (expresionP -> DIFFERENT exp .)
    CLOSEPARENTHESES reduce using rule 22 (expresionP -> DIFFERENT exp .)


state 79

    (33) expP -> PLUS exp .

    GREATER         reduce using rule 33 (expP -> PLUS exp .)
    LESS            reduce using rule 33 (expP -> PLUS exp .)
    DIFFERENT       reduce using rule 33 (expP -> PLUS exp .)
    SEMICOLON       reduce using rule 33 (expP -> PLUS exp .)
    DOT             reduce using rule 33 (expP -> PLUS exp .)
    CLOSEPARENTHESES reduce using rule 33 (expP -> PLUS exp .)


state 80

    (34) expP -> MINUS exp .

    GREATER         reduce using rule 34 (expP -> MINUS exp .)
    LESS            reduce using rule 34 (expP -> MINUS exp .)
    DIFFERENT       reduce using rule 34 (expP -> MINUS exp .)
    SEMICOLON       reduce using rule 34 (expP -> MINUS exp .)
    DOT             reduce using rule 34 (expP -> MINUS exp .)
    CLOSEPARENTHESES reduce using rule 34 (expP -> MINUS exp .)


state 81

    (37) terminoP -> MULTIPLY terminoP .

    PLUS            reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    MINUS           reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    GREATER         reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    LESS            reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    DIFFERENT       reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    SEMICOLON       reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    DOT             reduce using rule 37 (terminoP -> MULTIPLY terminoP .)
    CLOSEPARENTHESES reduce using rule 37 (terminoP -> MULTIPLY terminoP .)


state 82

    (38) terminoP -> DIVIDE terminoP .

    PLUS            reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    MINUS           reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    GREATER         reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    LESS            reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    DIFFERENT       reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    SEMICOLON       reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    DOT             reduce using rule 38 (terminoP -> DIVIDE terminoP .)
    CLOSEPARENTHESES reduce using rule 38 (terminoP -> DIVIDE terminoP .)


state 83

    (40) factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .

    MULTIPLY        reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    DIVIDE          reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    PLUS            reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    MINUS           reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    GREATER         reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    LESS            reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    DIFFERENT       reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    SEMICOLON       reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    DOT             reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)
    CLOSEPARENTHESES reduce using rule 40 (factor -> OPENPARENTHESES expresion CLOSEPARENTHESES .)


state 84

    (30) condicion -> condicionP bloque ELSE bloque SEMICOLON .

    ID              reduce using rule 30 (condicion -> condicionP bloque ELSE bloque SEMICOLON .)
    PRINT           reduce using rule 30 (condicion -> condicionP bloque ELSE bloque SEMICOLON .)
    IF              reduce using rule 30 (condicion -> condicionP bloque ELSE bloque SEMICOLON .)
    CLOSEBRACE      reduce using rule 30 (condicion -> condicionP bloque ELSE bloque SEMICOLON .)


state 85

    (24) escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 24 (escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 24 (escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 24 (escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 24 (escritura -> PRINT OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)


state 86

    (26) escrituraP -> expresion DOT escrituraP .

    CLOSEPARENTHESES reduce using rule 26 (escrituraP -> expresion DOT escrituraP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 13 resolved using rule (bloqueP -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 13
